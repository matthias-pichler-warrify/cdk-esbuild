name: manual-release
on:
  workflow_dispatch: {}
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_commit: ${{ steps.git_remote.outputs.latest_commit }}
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      - name: Update npm
        run: sudo npm i -g npm
      - name: Install dependencies
        run: npm ci
      - name: release
        run: npx projen release
      - name: Upload artifact
        uses: actions/upload-artifact@v2.1.1
        with:
          name: build-artifact
          path: dist
    container:
      image: jsii/superchain:1-buster-slim-node14
  release_github:
    name: Publish to GitHub Releases
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Update npm
        run: npm i -g npm
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifact
          path: dist
      - name: Prepare Repository
        run: mv dist .repo
      - name: Collect GitHub Metadata
        run: mv .repo/dist dist
      - name: Release
        run: errout=$(mktemp); gh release create $(cat dist/releasetag.txt) -R $GITHUB_REPOSITORY -F dist/changelog.md -t $(cat dist/releasetag.txt) --target $GITHUB_REF 2> $errout && true; exitcode=$?; if [ $exitcode -ne 0 ] && ! grep -q "Release.tag_name already exists" $errout; then cat $errout; exit $exitcode; fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REF: ${{ github.ref }}
  release_npm:
    name: Publish to npm
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Update npm
        run: npm i -g npm
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifact
          path: dist
      - name: Prepare Repository
        run: mv dist .repo
      - name: Install Dependencies
        run: cd .repo && npm ci
      - name: Create js artifact
        run: cd .repo && npx projen package:js
      - name: Collect js Artifact
        run: mv .repo/dist dist
      - name: Release
        run: npx -p jsii-release@latest jsii-release-npm
        env:
          NPM_DIST_TAG: next
          NPM_REGISTRY: registry.npmjs.org
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      # - name: Update tags
      #   run: |
      #     version=`cat dist/version.txt`
      #     echo $version
      #     npm dist-tag add @mrgrain/cdk-esbuild@$version cdk-v2
      #     npm dist-tag add @mrgrain/cdk-esbuild@$version unstable
      #     npm dist-tag add @mrgrain/cdk-esbuild@$version next
      #   env:
      #     NPM_REGISTRY: registry.npmjs.org
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
